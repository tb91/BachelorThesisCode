package projects.reactiveSpanner.nodes.timers.BCA;

import projects.reactiveSpanner.CustomGlobal;
import projects.reactiveSpanner.nodes.messages.BCA.FirstRequest;
import projects.reactiveSpanner.nodes.messages.BCA.FirstResponse;
import projects.reactiveSpanner.nodes.messages.BCA.SecondRequest;
import projects.reactiveSpanner.nodes.messages.BCA.SecondResponse;
import sinalgo.nodes.messages.Message;

public class BCAMessageTimer extends projects.defaultProject.nodes.timers.MessageTimer {
	private boolean enabled = true; // if not enabled, timer will not send
	
	private int msgType = -1;
	
	public BCAMessageTimer(Message msg) {
		super(msg);

		// Logging
		if (msg instanceof FirstRequest) {
			msgType = 0;
		}
		if (msg instanceof FirstResponse) {
			msgType = 1;
		}
		if (msg instanceof SecondRequest) {
			msgType = 2;
		}
		if (msg instanceof SecondResponse) {
			msgType = 3;
		}
	}

	@Override
	public void fire() {
		if (enabled) {
			super.fire();
			
			// Logging
			CustomGlobal.totalMessages++;
			
			switch (msgType) {
			case 0:
				CustomGlobal.firstRequests++;
				CustomGlobal.firstRequestNodes.add(this.node);
				System.out.println(this.node.toString() + "fired FirstRequestTimer!");
				break;
			case 1:
				CustomGlobal.firstResponses++;
				CustomGlobal.firstResponseNodes.add(this.node);
				System.out.println(this.node.toString() + "fired FirstResponseTimer!");
				break;
			case 2:
				CustomGlobal.secondRequests++;
				System.out.println(this.node.toString() + "fired SecondRequestTimer!");
				break;
			case 3:
				CustomGlobal.secondResponses++;
				CustomGlobal.secondResponseNodes.add(this.node);
				System.out.println(this.node.toString() + "fired secondResponseTimer!");
				break;
			}
		}
	}
	
	public void disable() {
		enabled = false;
	}
	
}
